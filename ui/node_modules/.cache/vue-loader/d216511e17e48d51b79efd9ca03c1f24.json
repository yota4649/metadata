{"remainingRequest":"/space/metadata/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/space/metadata/ui/src/views/LoginPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/space/metadata/ui/src/views/LoginPage.vue","mtime":1707869128060},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/babel-loader/lib/index.js","mtime":1707869666788},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/vue-loader/lib/index.js","mtime":1707869662322}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'LoginPage',\n  beforeRouteUpdate(to, from, next) {\n    this.user = '';\n    this.pass = '';\n    this.pending = false;\n    this.hasLoginSuccess = false;\n    this.hasLoginError = false;\n    this.hasLogoutSuccess = false;\n    this.hasLogoutError = false;\n    next();\n  },\n  data() {\n    return {\n      user: '',\n      pass: '',\n      pending: false,\n      hasLoginSuccess: false,\n      hasLoginError: false,\n      hasLogoutSuccess: false,\n      hasLogoutError: false\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.state.auth.authenticated;\n    },\n    showCancel() {\n      return this.$route.params && this.$route.params.state;\n    }\n  },\n  methods: {\n    doLogin() {\n      var self = this;\n\n      self.pending = true;\n\n      self.hasLoginSuccess = false;\n      self.hasLoginError = false;\n      self.hasLogoutSuccess = false;\n      self.hasLogoutError = false;\n\n      self.$store\n        .dispatch('auth/login', {\n          user: self.user,\n          pass: self.pass\n        })\n        .then(function(error) {\n          self.pending = false;\n          if (error) {\n            self.hasLoginError = true;\n          } else {\n            self.hasLoginSuccess = true;\n            if (self.$route.params && self.$route.params.state) {\n              self.$router.push({\n                name: self.$route.params.state,\n                params: self.$route.params.params\n              });\n            }\n          }\n        });\n    },\n    doCancel() {\n      var self = this;\n      self.$store.dispatch('auth/cancelLogin').then(() => {\n        if (self.$route.params && self.$route.params.state) {\n          self.$router.push({\n            name: self.$route.params.state,\n            params: self.$route.params.params\n          });\n        } else {\n          self.$router.push({ name: 'root.landing' });\n        }\n      });\n    },\n    doLogout() {\n      var self = this;\n\n      self.pending = true;\n\n      self.hasLoginSuccess = false;\n      self.hasLoginError = false;\n      self.hasLogoutSuccess = false;\n      self.hasLogoutError = false;\n\n      self.$store.dispatch('auth/logout').then(function(error) {\n        self.pending = false;\n        if (error) {\n          self.hasLogoutError = true;\n        } else {\n          self.hasLogoutSuccess = true;\n        }\n      });\n    }\n  }\n};\n",{"version":3,"sources":["LoginPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LoginPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-md-6 col-md-offset-3\">\n      <div class=\"jumbotron login-box\">\n        <form v-on:submit.prevent=\"isLoggedIn ? doLogout() : doLogin()\">\n          <div class=\"alert alert-danger\" v-show=\"hasLoginError\" v-cloak>Username and/or Password Incorrect</div>\n          <div class=\"alert alert-success\" v-show=\"hasLoginSuccess\" v-cloak>You successfully logged in</div>\n          <div class=\"alert alert-danger\" v-show=\"hasLogoutError\" v-cloak>Logout failed</div>\n          <div class=\"alert alert-success\" v-show=\"hasLogoutSuccess\" v-cloak>You successfully logged out</div>\n          <div v-if=\"!isLoggedIn\">\n            <div class=\"form-group\">\n              <input type=\"text\" placeholder=\"Username\" class=\"form-control\" v-model=\"user\" autocomplete=\"@sample-app-name login username\">\n            </div>\n            <div class=\"form-group\">\n              <input type=\"password\" placeholder=\"Password\" class=\"form-control\" v-model=\"pass\" autocomplete=\"@sample-app-name login current-pasword\">\n            </div>\n          </div>\n          <button v-if=\"showCancel\" type=\"button\" class=\"btn btn-default\" v-on:click.prevent=\"doCancel()\">Cancel</button>\n          <button type=\"submit\" class=\"btn btn-success\">Sign {{ isLoggedIn ? 'out' : 'in' }} <i v-if=\"pending\" class=\"fa fa-refresh fa-spin\"/></button>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'LoginPage',\n  beforeRouteUpdate(to, from, next) {\n    this.user = '';\n    this.pass = '';\n    this.pending = false;\n    this.hasLoginSuccess = false;\n    this.hasLoginError = false;\n    this.hasLogoutSuccess = false;\n    this.hasLogoutError = false;\n    next();\n  },\n  data() {\n    return {\n      user: '',\n      pass: '',\n      pending: false,\n      hasLoginSuccess: false,\n      hasLoginError: false,\n      hasLogoutSuccess: false,\n      hasLogoutError: false\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.state.auth.authenticated;\n    },\n    showCancel() {\n      return this.$route.params && this.$route.params.state;\n    }\n  },\n  methods: {\n    doLogin() {\n      var self = this;\n\n      self.pending = true;\n\n      self.hasLoginSuccess = false;\n      self.hasLoginError = false;\n      self.hasLogoutSuccess = false;\n      self.hasLogoutError = false;\n\n      self.$store\n        .dispatch('auth/login', {\n          user: self.user,\n          pass: self.pass\n        })\n        .then(function(error) {\n          self.pending = false;\n          if (error) {\n            self.hasLoginError = true;\n          } else {\n            self.hasLoginSuccess = true;\n            if (self.$route.params && self.$route.params.state) {\n              self.$router.push({\n                name: self.$route.params.state,\n                params: self.$route.params.params\n              });\n            }\n          }\n        });\n    },\n    doCancel() {\n      var self = this;\n      self.$store.dispatch('auth/cancelLogin').then(() => {\n        if (self.$route.params && self.$route.params.state) {\n          self.$router.push({\n            name: self.$route.params.state,\n            params: self.$route.params.params\n          });\n        } else {\n          self.$router.push({ name: 'root.landing' });\n        }\n      });\n    },\n    doLogout() {\n      var self = this;\n\n      self.pending = true;\n\n      self.hasLoginSuccess = false;\n      self.hasLoginError = false;\n      self.hasLogoutSuccess = false;\n      self.hasLogoutError = false;\n\n      self.$store.dispatch('auth/logout').then(function(error) {\n        self.pending = false;\n        if (error) {\n          self.hasLogoutError = true;\n        } else {\n          self.hasLogoutSuccess = true;\n        }\n      });\n    }\n  }\n};\n</script>\n"]}]}