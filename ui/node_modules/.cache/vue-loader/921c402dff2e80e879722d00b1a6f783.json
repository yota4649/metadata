{"remainingRequest":"/space/metadata/ui/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/space/metadata/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/space/metadata/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/space/metadata/ui/src/views/LoginPage.vue?vue&type=template&id=485424ce&","dependencies":[{"path":"/space/metadata/ui/src/views/LoginPage.vue","mtime":1707869128060},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1707869662604},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/vue-loader/lib/index.js","mtime":1707869662322}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"row\" }, [\n    _c(\"div\", { staticClass: \"col-md-6 col-md-offset-3\" }, [\n      _c(\"div\", { staticClass: \"jumbotron login-box\" }, [\n        _c(\n          \"form\",\n          {\n            on: {\n              submit: function($event) {\n                $event.preventDefault()\n                _vm.isLoggedIn ? _vm.doLogout() : _vm.doLogin()\n              }\n            }\n          },\n          [\n            _c(\n              \"div\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.hasLoginError,\n                    expression: \"hasLoginError\"\n                  }\n                ],\n                staticClass: \"alert alert-danger\"\n              },\n              [_vm._v(\"Username and/or Password Incorrect\")]\n            ),\n            _c(\n              \"div\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.hasLoginSuccess,\n                    expression: \"hasLoginSuccess\"\n                  }\n                ],\n                staticClass: \"alert alert-success\"\n              },\n              [_vm._v(\"You successfully logged in\")]\n            ),\n            _c(\n              \"div\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.hasLogoutError,\n                    expression: \"hasLogoutError\"\n                  }\n                ],\n                staticClass: \"alert alert-danger\"\n              },\n              [_vm._v(\"Logout failed\")]\n            ),\n            _c(\n              \"div\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.hasLogoutSuccess,\n                    expression: \"hasLogoutSuccess\"\n                  }\n                ],\n                staticClass: \"alert alert-success\"\n              },\n              [_vm._v(\"You successfully logged out\")]\n            ),\n            !_vm.isLoggedIn\n              ? _c(\"div\", [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.user,\n                          expression: \"user\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"text\",\n                        placeholder: \"Username\",\n                        autocomplete: \"@sample-app-name login username\"\n                      },\n                      domProps: { value: _vm.user },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.user = $event.target.value\n                        }\n                      }\n                    })\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.pass,\n                          expression: \"pass\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"password\",\n                        placeholder: \"Password\",\n                        autocomplete: \"@sample-app-name login current-pasword\"\n                      },\n                      domProps: { value: _vm.pass },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.pass = $event.target.value\n                        }\n                      }\n                    })\n                  ])\n                ])\n              : _vm._e(),\n            _vm.showCancel\n              ? _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-default\",\n                    attrs: { type: \"button\" },\n                    on: {\n                      click: function($event) {\n                        $event.preventDefault()\n                        _vm.doCancel()\n                      }\n                    }\n                  },\n                  [_vm._v(\"Cancel\")]\n                )\n              : _vm._e(),\n            _c(\n              \"button\",\n              { staticClass: \"btn btn-success\", attrs: { type: \"submit\" } },\n              [\n                _vm._v(\"Sign \" + _vm._s(_vm.isLoggedIn ? \"out\" : \"in\") + \" \"),\n                _vm.pending\n                  ? _c(\"i\", { staticClass: \"fa fa-refresh fa-spin\" })\n                  : _vm._e()\n              ]\n            )\n          ]\n        )\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}