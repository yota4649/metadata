{"remainingRequest":"C:\\demo\\metadata\\ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\demo\\metadata\\ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\demo\\metadata\\ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\demo\\metadata\\ui\\src\\views\\CreatePage.vue?vue&type=template&id=a69e0436&","dependencies":[{"path":"C:\\demo\\metadata\\ui\\src\\views\\CreatePage.vue","mtime":1707869128000},{"path":"C:\\demo\\metadata\\ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1707869666000},{"path":"C:\\demo\\metadata\\ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1707869662000},{"path":"C:\\demo\\metadata\\ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1707869666000},{"path":"C:\\demo\\metadata\\ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1707869662000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"create\" }, [\n    !_vm.profile.disallowUpdates\n      ? _c(\"div\", { staticClass: \"row\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"col-sm-12\" },\n            [\n              _c(\"b-alert\", { attrs: { variant: \"warning\" } }, [\n                _vm._v(\"Not allowed\")\n              ])\n            ],\n            1\n          )\n        ])\n      : _vm._e(),\n    _vm.profile.disallowUpdates\n      ? _c(\"div\", { staticClass: \"row\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"col-sm-12\" },\n            [\n              _c(\"b-alert\", { attrs: { variant: \"warning\" } }, [\n                _vm._v(\"Updates are disallowed\")\n              ])\n            ],\n            1\n          )\n        ])\n      : _vm._e(),\n    !_vm.profile.disallowUpdates\n      ? _c(\"div\", [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-sm-2\" }),\n            _vm.mode === \"create\"\n              ? _c(\"h2\", { staticClass: \"col-sm-10\" }, [\n                  _vm._v(\"Create a Document\")\n                ])\n              : _vm._e(),\n            _vm.mode === \"edit\"\n              ? _c(\"h2\", { staticClass: \"col-sm-10\" }, [\n                  _vm._v('Edit \"' + _vm._s(_vm.id) + '\"')\n                ])\n              : _vm._e()\n          ]),\n          _c(\"form\", { staticClass: \"form-horizontal\" }, [\n            _vm._m(0),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { staticClass: \"col-sm-2 control-label required\" }, [\n                _vm._v(\"Name\")\n              ]),\n              _c(\"div\", { staticClass: \"col-sm-10\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model.trim\",\n                      value: _vm.person.name,\n                      expression: \"person.name\",\n                      modifiers: { trim: true }\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    placeholder: \"person's name\",\n                    name: \"name\",\n                    minlength: \"3\",\n                    maxlength: \"100\"\n                  },\n                  domProps: { value: _vm.person.name },\n                  on: {\n                    input: [\n                      function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.person, \"name\", $event.target.value.trim())\n                      },\n                      _vm.$v.person.name.$touch\n                    ],\n                    blur: function($event) {\n                      _vm.$forceUpdate()\n                    }\n                  }\n                })\n              ])\n            ]),\n            _vm.$v.person.name.$invalid\n              ? _c(\"div\", { staticClass: \"row form-error\" }, [\n                  _c(\n                    \"div\",\n                    {\n                      staticClass:\n                        \"col-md-10 col-md-offset-2 has-error has-feedback\"\n                    },\n                    [\n                      _c(\"div\", [\n                        !_vm.$v.person.name.required\n                          ? _c(\"p\", { staticClass: \"alert alert-danger\" }, [\n                              _vm._v(\"Person's name is required.\")\n                            ])\n                          : _vm._e(),\n                        !_vm.$v.person.name.minLength\n                          ? _c(\"p\", { staticClass: \"alert alert-danger\" }, [\n                              _vm._v(\"Minimum 3 characters.\")\n                            ])\n                          : _vm._e(),\n                        !_vm.$v.person.name.maxLength\n                          ? _c(\"p\", { staticClass: \"alert alert-danger\" }, [\n                              _vm._v(\"Maximum of 100 characters.\")\n                            ])\n                          : _vm._e()\n                      ])\n                    ]\n                  )\n                ])\n              : _vm._e(),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { staticClass: \"col-sm-2 control-label\" }, [\n                _vm._v(\"About\")\n              ]),\n              _c(\"div\", { staticClass: \"col-sm-10\" }, [\n                _c(\"textarea\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.person.about,\n                      expression: \"person.about\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: { rows: \"8\" },\n                  domProps: { value: _vm.person.about },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.person, \"about\", $event.target.value)\n                    }\n                  }\n                })\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { staticClass: \"col-sm-2 control-label\" }, [\n                _vm._v(\"Greeting\")\n              ]),\n              _c(\"div\", { staticClass: \"col-sm-10\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.person.greeting,\n                      expression: \"person.greeting\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    placeholder: \"How this person should be greeted on login\"\n                  },\n                  domProps: { value: _vm.person.greeting },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.person, \"greeting\", $event.target.value)\n                    }\n                  }\n                })\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { staticClass: \"col-sm-2 control-label\" }, [\n                _vm._v(\"Balance\")\n              ]),\n              _c(\"div\", { staticClass: \"col-sm-10\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.person.balance,\n                      expression: \"person.balance\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: { type: \"text\", placeholder: \"\" },\n                  domProps: { value: _vm.person.balance },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.person, \"balance\", $event.target.value)\n                    }\n                  }\n                })\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { staticClass: \"col-sm-2 control-label\" }, [\n                _vm._v(\"Picture\")\n              ]),\n              _c(\"div\", { staticClass: \"col-sm-10\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.person.picture,\n                      expression: \"person.picture\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: { type: \"text\", placeholder: \"\" },\n                  domProps: { value: _vm.person.picture },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.person, \"picture\", $event.target.value)\n                    }\n                  }\n                })\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { staticClass: \"col-sm-2 control-label\" }, [\n                _vm._v(\"Age\")\n              ]),\n              _c(\"div\", { staticClass: \"col-sm-10\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.person.age,\n                      expression: \"person.age\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: { type: \"number\", placeholder: \"\", name: \"age\" },\n                  domProps: { value: _vm.person.age },\n                  on: {\n                    input: [\n                      function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.person, \"age\", $event.target.value)\n                      },\n                      _vm.$v.person.age.$touch\n                    ]\n                  }\n                })\n              ])\n            ]),\n            _vm.$v.person.age.$invalid\n              ? _c(\"div\", { staticClass: \"row form-error\" }, [\n                  _c(\n                    \"div\",\n                    {\n                      staticClass:\n                        \"col-md-10 col-md-offset-2 has-error has-feedback\"\n                    },\n                    [\n                      _c(\"div\", [\n                        !_vm.$v.person.age.numeric\n                          ? _c(\"p\", { staticClass: \"alert alert-danger\" }, [\n                              _vm._v(\"Invalid age format.\")\n                            ])\n                          : _vm._e()\n                      ])\n                    ]\n                  )\n                ])\n              : _vm._e(),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { staticClass: \"col-sm-2 control-label required\" }, [\n                _vm._v(\"Eye Color\")\n              ]),\n              _c(\"div\", { staticClass: \"col-sm-10\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.person.eyeColor,\n                      expression: \"person.eyeColor\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: { type: \"text\", placeholder: \"\", name: \"eyeColor\" },\n                  domProps: { value: _vm.person.eyeColor },\n                  on: {\n                    input: [\n                      function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.person, \"eyeColor\", $event.target.value)\n                      },\n                      _vm.$v.person.eyeColor.$touch\n                    ]\n                  }\n                })\n              ])\n            ]),\n            _vm.$v.person.eyeColor.$invalid\n              ? _c(\"div\", { staticClass: \"row form-error\" }, [\n                  _c(\n                    \"div\",\n                    {\n                      staticClass:\n                        \"col-md-10 col-md-offset-2 has-error has-feedback\"\n                    },\n                    [\n                      _c(\"div\", [\n                        !_vm.$v.person.eyeColor.required\n                          ? _c(\"p\", { staticClass: \"alert alert-danger\" }, [\n                              _vm._v(\"Eye Color is required.\")\n                            ])\n                          : _vm._e()\n                      ])\n                    ]\n                  )\n                ])\n              : _vm._e(),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { staticClass: \"col-sm-2 control-label required\" }, [\n                _vm._v(\"Gender\")\n              ]),\n              _c(\"div\", { staticClass: \"col-sm-1\" }, [\n                _c(\"label\", { staticClass: \"radio-inline\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.person.gender,\n                        expression: \"person.gender\"\n                      }\n                    ],\n                    attrs: {\n                      type: \"radio\",\n                      value: \"female\",\n                      placeholder: \"\",\n                      name: \"gender\"\n                    },\n                    domProps: { checked: _vm._q(_vm.person.gender, \"female\") },\n                    on: {\n                      input: _vm.$v.person.gender.$touch,\n                      change: function($event) {\n                        _vm.$set(_vm.person, \"gender\", \"female\")\n                      }\n                    }\n                  }),\n                  _vm._v(\"Female\")\n                ])\n              ]),\n              _c(\"div\", { staticClass: \"col-sm-1\" }, [\n                _c(\"label\", { staticClass: \"radio-inline\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.person.gender,\n                        expression: \"person.gender\"\n                      }\n                    ],\n                    attrs: {\n                      type: \"radio\",\n                      value: \"male\",\n                      placeholder: \"\",\n                      name: \"gender\"\n                    },\n                    domProps: { checked: _vm._q(_vm.person.gender, \"male\") },\n                    on: {\n                      input: _vm.$v.person.gender.$touch,\n                      change: function($event) {\n                        _vm.$set(_vm.person, \"gender\", \"male\")\n                      }\n                    }\n                  }),\n                  _vm._v(\"Male\")\n                ])\n              ])\n            ]),\n            _vm.$v.person.gender.$invalid\n              ? _c(\"div\", { staticClass: \"row form-error\" }, [\n                  _c(\n                    \"div\",\n                    {\n                      staticClass:\n                        \"col-md-10 col-md-offset-2 has-error has-feedback\"\n                    },\n                    [\n                      _c(\"div\", [\n                        !_vm.$v.person.gender.required\n                          ? _c(\"p\", { staticClass: \"alert alert-danger\" }, [\n                              _vm._v(\"Gender is required.\")\n                            ])\n                          : _vm._e()\n                      ])\n                    ]\n                  )\n                ])\n              : _vm._e(),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { staticClass: \"col-sm-2 control-label\" }, [\n                _vm._v(\"Company\")\n              ]),\n              _c(\"div\", { staticClass: \"col-sm-10\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.person.company,\n                      expression: \"person.company\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: { type: \"text\", placeholder: \"\" },\n                  domProps: { value: _vm.person.company },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.person, \"company\", $event.target.value)\n                    }\n                  }\n                })\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { staticClass: \"col-sm-2 control-label\" }, [\n                _vm._v(\"Email\")\n              ]),\n              _c(\"div\", { staticClass: \"col-sm-10\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.person.email,\n                      expression: \"person.email\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: { type: \"email\", placeholder: \"\", name: \"email\" },\n                  domProps: { value: _vm.person.email },\n                  on: {\n                    input: [\n                      function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.person, \"email\", $event.target.value)\n                      },\n                      _vm.$v.person.email.$touch\n                    ]\n                  }\n                })\n              ])\n            ]),\n            _c(\n              \"div\",\n              {\n                staticClass: \"row form-error\",\n                attrs: { \"ng-if\": \"$v.person.email.$invalid\" }\n              },\n              [\n                _c(\n                  \"div\",\n                  {\n                    staticClass:\n                      \"col-md-10 col-md-offset-2 has-error has-feedback\"\n                  },\n                  [\n                    _c(\"div\", [\n                      !_vm.$v.person.email.email\n                        ? _c(\"p\", { staticClass: \"alert alert-danger\" }, [\n                            _vm._v(\"Invalid email format.\")\n                          ])\n                        : _vm._e()\n                    ])\n                  ]\n                )\n              ]\n            ),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { staticClass: \"col-sm-2 control-label\" }, [\n                _vm._v(\"Phone\")\n              ]),\n              _c(\"div\", { staticClass: \"col-sm-10\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.person.phone,\n                      expression: \"person.phone\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: { type: \"text\", placeholder: \"\" },\n                  domProps: { value: _vm.person.phone },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.person, \"phone\", $event.target.value)\n                    }\n                  }\n                })\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { staticClass: \"col-sm-2 control-label\" }, [\n                _vm._v(\"Address\")\n              ]),\n              _c(\"div\", { staticClass: \"col-sm-10\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.person.address,\n                      expression: \"person.address\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: { type: \"text\", placeholder: \"\" },\n                  domProps: { value: _vm.person.address },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.person, \"address\", $event.target.value)\n                    }\n                  }\n                })\n              ])\n            ]),\n            _vm.person.location\n              ? _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\"label\", { staticClass: \"col-sm-2 control-label\" }, [\n                    _vm._v(\"Location\")\n                  ]),\n                  _c(\"div\", { staticClass: \"col-sm-5\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.person.location.latitude,\n                          expression: \"person.location.latitude\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"number\",\n                        placeholder: \"\",\n                        min: \"-90\",\n                        max: \"90\",\n                        name: \"latitude\"\n                      },\n                      domProps: { value: _vm.person.location.latitude },\n                      on: {\n                        input: [\n                          function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(\n                              _vm.person.location,\n                              \"latitude\",\n                              $event.target.value\n                            )\n                          },\n                          _vm.$v.person.location.latitude.$touch\n                        ]\n                      }\n                    })\n                  ]),\n                  _c(\"div\", { staticClass: \"col-sm-5\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.person.location.longitude,\n                          expression: \"person.location.longitude\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"number\",\n                        placeholder: \"\",\n                        min: \"-180\",\n                        max: \"180\",\n                        name: \"longitude\"\n                      },\n                      domProps: { value: _vm.person.location.longitude },\n                      on: {\n                        input: [\n                          function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(\n                              _vm.person.location,\n                              \"longitude\",\n                              $event.target.value\n                            )\n                          },\n                          _vm.$v.person.location.longitude.$touch\n                        ]\n                      }\n                    })\n                  ])\n                ])\n              : _vm._e(),\n            _vm.$v.person.location.latitude.$invalid\n              ? _c(\"div\", { staticClass: \"row form-error\" }, [\n                  _c(\n                    \"div\",\n                    {\n                      staticClass:\n                        \"col-md-10 col-md-offset-2 has-error has-feedback\"\n                    },\n                    [\n                      _c(\"div\", [\n                        !_vm.$v.person.location.latitude.required\n                          ? _c(\"p\", { staticClass: \"alert alert-danger\" }, [\n                              _vm._v(\n                                \"Latitude is required if longitude is filled.\"\n                              )\n                            ])\n                          : _vm._e(),\n                        !_vm.$v.person.location.latitude.minValue\n                          ? _c(\"p\", { staticClass: \"alert alert-danger\" }, [\n                              _vm._v(\"Minimum value for latitude is -90.\")\n                            ])\n                          : _vm._e(),\n                        !_vm.$v.person.location.latitude.maxValue\n                          ? _c(\"p\", { staticClass: \"alert alert-danger\" }, [\n                              _vm._v(\"Maximum value for latitude is 90.\")\n                            ])\n                          : _vm._e()\n                      ])\n                    ]\n                  )\n                ])\n              : _vm._e(),\n            _c(\n              \"div\",\n              {\n                staticClass: \"row form-error\",\n                attrs: { \"ng-if\": \"$v.person.location.longitude.$invalid\" }\n              },\n              [\n                _c(\n                  \"div\",\n                  {\n                    staticClass:\n                      \"col-md-10 col-md-offset-2 has-error has-feedback\"\n                  },\n                  [\n                    !_vm.$v.person.location.longitude.required\n                      ? _c(\"p\", { staticClass: \"alert alert-danger\" }, [\n                          _vm._v(\"Longitude is required if latitude is filled.\")\n                        ])\n                      : _vm._e(),\n                    !_vm.$v.person.location.longitude.minValue\n                      ? _c(\"p\", { staticClass: \"alert alert-danger\" }, [\n                          _vm._v(\"Minimum value for longitude is -180.\")\n                        ])\n                      : _vm._e(),\n                    !_vm.$v.person.location.longitude.maxValue\n                      ? _c(\"p\", { staticClass: \"alert alert-danger\" }, [\n                          _vm._v(\"Maximum value for longitude is 180.\")\n                        ])\n                      : _vm._e()\n                  ]\n                )\n              ]\n            ),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { staticClass: \"col-sm-2 control-label\" }, [\n                _vm._v(\"Tags\")\n              ]),\n              _c(\n                \"div\",\n                { staticClass: \"col-sm-9\" },\n                [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.newTag,\n                        expression: \"newTag\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: { type: \"text\" },\n                    domProps: { value: _vm.newTag },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.newTag = $event.target.value\n                      }\n                    }\n                  }),\n                  _vm._l(_vm.person.tags, function(tag, $index) {\n                    return _c(\n                      \"div\",\n                      { key: $index, staticClass: \"tag btn btn-info\" },\n                      [\n                        _c(\"span\", [_vm._v(_vm._s(tag))]),\n                        _c(\"span\", {\n                          staticClass: \"glyphicon glyphicon-remove-circle\",\n                          on: {\n                            click: function($event) {\n                              $event.preventDefault()\n                              _vm.removeTag(_vm.index)\n                            }\n                          }\n                        })\n                      ]\n                    )\n                  })\n                ],\n                2\n              ),\n              _c(\"div\", { staticClass: \"col-sm-1 text-right\" }, [\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"add-feature btn btn-info\",\n                    on: {\n                      click: function($event) {\n                        $event.preventDefault()\n                        _vm.addTag()\n                      }\n                    }\n                  },\n                  [_vm._v(\"Add\")]\n                )\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { staticClass: \"col-sm-2 control-label\" }, [\n                _vm._v(\"Active\")\n              ]),\n              _c(\"div\", { staticClass: \"col-sm-10\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.person.isActive,\n                      expression: \"person.isActive\"\n                    }\n                  ],\n                  attrs: { type: \"checkbox\" },\n                  domProps: {\n                    checked: Array.isArray(_vm.person.isActive)\n                      ? _vm._i(_vm.person.isActive, null) > -1\n                      : _vm.person.isActive\n                  },\n                  on: {\n                    change: function($event) {\n                      var $$a = _vm.person.isActive,\n                        $$el = $event.target,\n                        $$c = $$el.checked ? true : false\n                      if (Array.isArray($$a)) {\n                        var $$v = null,\n                          $$i = _vm._i($$a, $$v)\n                        if ($$el.checked) {\n                          $$i < 0 &&\n                            _vm.$set(_vm.person, \"isActive\", $$a.concat([$$v]))\n                        } else {\n                          $$i > -1 &&\n                            _vm.$set(\n                              _vm.person,\n                              \"isActive\",\n                              $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                            )\n                        }\n                      } else {\n                        _vm.$set(_vm.person, \"isActive\", $$c)\n                      }\n                    }\n                  }\n                })\n              ])\n            ]),\n            _c(\n              \"div\",\n              {\n                staticClass: \"row form-error\",\n                attrs: { \"ng-if\": \"$v.person.docFormat.$invalid\" }\n              },\n              [\n                _c(\n                  \"div\",\n                  {\n                    staticClass:\n                      \"col-md-10 col-md-offset-2 has-error has-feedback\"\n                  },\n                  [\n                    _c(\"div\", [\n                      !_vm.$v.person.docFormat.required\n                        ? _c(\"p\", { staticClass: \"alert alert-danger\" }, [\n                            _vm._v(\"Document Format is required.\")\n                          ])\n                        : _vm._e()\n                    ])\n                  ]\n                )\n              ]\n            ),\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"col-md-12 text-right\" },\n                [\n                  _c(\n                    \"router-link\",\n                    { staticClass: \"btn btn-default\", attrs: { to: \"/\" } },\n                    [_vm._v(\"Cancel\")]\n                  ),\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-primary\",\n                      on: {\n                        click: function($event) {\n                          $event.preventDefault()\n                          _vm.submit()\n                        }\n                      }\n                    },\n                    [_vm._v(\"Submit\")]\n                  )\n                ],\n                1\n              )\n            ])\n          ])\n        ])\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"form-group\" }, [\n      _c(\"div\", { staticClass: \"col-sm-8 col-sm-offset-2\" }, [\n        _c(\"strong\", { staticClass: \"required alert-danger\" }, [\n          _c(\"em\", [_vm._v(\"required\")])\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}