{"remainingRequest":"/space/metadata/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/space/metadata/ui/src/views/UploadPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/space/metadata/ui/src/views/UploadPage.vue","mtime":1707869128061},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/babel-loader/lib/index.js","mtime":1707869666788},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/vue-loader/lib/index.js","mtime":1707869662322}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\";\nexport default {\n  name: 'UploadPage',\n  components: {},\n  props: ['type'],\n  data() {\n    const self=this;\n    return {\n      tagList:\"\",\n    }\n  },\n  computed: {},\n  methods: {\n    sendFile(e) {\n      var progress = e.detail;\n      console.log(['sendFile', progress]);\n\n      progress.update(0);\n      this.$store\n        .dispatch('crud/' + this.type + '/create', {\n          // Note: spaces in names/id's are not accepted, not even encoded.\n          id: encodeURIComponent(\n            '/upload/' + progress.file.name.replace(/\\s/g, '_')\n          ),\n          data: progress.file,\n          format: 'binary'\n        })\n        .then(function(response) {\n          progress.id = response.id;\n          if (!response.isError) {\n            progress.update(100);\n          } else {\n            progress.error(response.error);\n          }\n        });\n    },\n    sendAllFiles(e) {\n      var all = e.detail;\n      console.log(['sendAllFiles', all]);\n    },\n    openFile(e) {\n      var progress = e.detail;\n      console.log(['openFile', progress]);\n      this.$router.push({\n        name: 'root.view',\n        params: { id: progress.id }\n      });\n    },\n    buttonClicked(){\n        var para = {};\n        para[\"rs.tagList\"] = this.tagList;\n        window.alert(\"Generate Metadata with : \"+this.tagList);\n\n        axios\n          .put(\"/v1/resources/generateMeta?rs:tagList=\"+encodeURIComponent(this.tagList), para)\n          .then((response) => {\n             console.log(\"Successfully generated\")\n             this.$router.go({path: this.$router.currentRoute.path, force: true});\n          })\n          .catch((e) => {\n              console.log(e);\n          });\n    },\n  }\n};\n",{"version":3,"sources":["UploadPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UploadPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <section class=\"upload\">\n    <h1>ファイルアップロード</h1>\n    <file-dropzone\n        button=\"false\"\n        multiple=\"multiple\"\n        v-on:drop=\"sendFile\"\n        v-on:drop-all=\"sendAllFiles\"\n        v-on:file-dblclick=\"openFile\">\n      <div slot=\"intro\">\n        <p><strong>ここにファイルをドロップするかクリックしてファイルを選択してください</strong></p>\n        <em>(ファイルは自動的にアップロードされます)</em>\n      </div>\n    </file-dropzone>\n    タグ名：\n    <input v-model=\"tagList\" placeholder=\"タグリスト(複数指定の場合はカンマで区切る)\">\n    <button class=\"btn btn-primary\" v-on:click=\"buttonClicked()\">メタデータ作成</button>\n  </section>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: 'UploadPage',\n  components: {},\n  props: ['type'],\n  data() {\n    const self=this;\n    return {\n      tagList:\"\",\n    }\n  },\n  computed: {},\n  methods: {\n    sendFile(e) {\n      var progress = e.detail;\n      console.log(['sendFile', progress]);\n\n      progress.update(0);\n      this.$store\n        .dispatch('crud/' + this.type + '/create', {\n          // Note: spaces in names/id's are not accepted, not even encoded.\n          id: encodeURIComponent(\n            '/upload/' + progress.file.name.replace(/\\s/g, '_')\n          ),\n          data: progress.file,\n          format: 'binary'\n        })\n        .then(function(response) {\n          progress.id = response.id;\n          if (!response.isError) {\n            progress.update(100);\n          } else {\n            progress.error(response.error);\n          }\n        });\n    },\n    sendAllFiles(e) {\n      var all = e.detail;\n      console.log(['sendAllFiles', all]);\n    },\n    openFile(e) {\n      var progress = e.detail;\n      console.log(['openFile', progress]);\n      this.$router.push({\n        name: 'root.view',\n        params: { id: progress.id }\n      });\n    },\n    buttonClicked(){\n        var para = {};\n        para[\"rs.tagList\"] = this.tagList;\n        window.alert(\"Generate Metadata with : \"+this.tagList);\n\n        axios\n          .put(\"/v1/resources/generateMeta?rs:tagList=\"+encodeURIComponent(this.tagList), para)\n          .then((response) => {\n             console.log(\"Successfully generated\")\n             this.$router.go({path: this.$router.currentRoute.path, force: true});\n          })\n          .catch((e) => {\n              console.log(e);\n          });\n    },\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n</style>\n"]}]}