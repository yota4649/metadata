{"remainingRequest":"/space/metadata/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/space/metadata/ui/src/components/ml-search/ml-results.vue?vue&type=script&lang=js&","dependencies":[{"path":"/space/metadata/ui/src/components/ml-search/ml-results.vue","mtime":1707869128059},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/babel-loader/lib/index.js","mtime":1707869666788},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/vue-loader/lib/index.js","mtime":1707869662322}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'ml-results',\n  props: {\n    results: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    }\n  },\n  methods: {\n    resultLabel(result) {\n      console.log(\"--------RESULT-------\");\n      console.log(result);\n      console.log(\"--------RESULT-------\");\n      return result.label || result.uri.split('/').pop();\n    },\n /*   getImgUrl(imgName) {\n       console.log(\"imgName\"); console.log(imgName);\n       var images = require.context('../../assets/images/parts/', false, /\\.png$/)\n       return images('./' + imgName)\n    },\n*/\n  }\n};\n",{"version":3,"sources":["ml-results.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ml-results.vue","sourceRoot":"src/components/ml-search","sourcesContent":["<template>\n  <div>\n  <!--  <transition-group name=\"fade\" mode=\"out-in\">  -->\n    <div class=\"table-responsive\">\n      <table class=\"table table-hover table-striped mb-0\">\n        <thead>\n          <tr>\n<!--\n            <th style=\"width:50px;\">Preview</th>\n-->\n            <th style=\"width:50px;\">分類</th>\n            <th style=\"width:150px;\">更新日時</th>\n            <th>ファイルパス</th>\n            <th>形式</th>\n            <th>アクセス数</th>\n            <th>詳細表示</th>\n            <th>タグ</th>\n            <th>ファイル表示</th>\n          </tr>\n        </thead>\n        <tbody>\n        <tr v-for=\"(result, $index) in results\" :key=\"$index\" class=\"result\">\n\n<!--\n          <h4>\n            <router-link :to=\"{ name: 'root.view', params: { id: result.id } }\">\n                 {{ resultLabel(result) }}\n            </router-link>\n          </h4>\n\n\n            <td><img v-bind:src=\"getImgUrl(result.partImage)\" class=\"previewImage\" /></td>\n-->\n            <td>{{ result.category }}</td>\n            <td>{{ result.update }}</td>\n            <td>{{ result.filePath }}</td>\n            <td>{{ result.fileType }}</td>\n            <td>{{ result.noa }}</td>\n\n            <td>\n              <router-link :to=\"{ name: 'root.view', params: { id: result.uri },}\" >\n                詳細 \n              </router-link>\n            </td>\n            <td>\n               {{result.collections}}\n            </td>\n            <td>\n               <a :href=\"result.pdfhref\" >表示</a>\n            </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  <!-- </transition-group> -->\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ml-results',\n  props: {\n    results: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    }\n  },\n  methods: {\n    resultLabel(result) {\n      console.log(\"--------RESULT-------\");\n      console.log(result);\n      console.log(\"--------RESULT-------\");\n      return result.label || result.uri.split('/').pop();\n    },\n /*   getImgUrl(imgName) {\n       console.log(\"imgName\"); console.log(imgName);\n       var images = require.context('../../assets/images/parts/', false, /\\.png$/)\n       return images('./' + imgName)\n    },\n*/\n  }\n};\n</script>\n"]}]}