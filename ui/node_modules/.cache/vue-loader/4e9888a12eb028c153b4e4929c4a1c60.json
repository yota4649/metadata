{"remainingRequest":"/space/metadata/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/space/metadata/ui/src/views/SearchPage.vue?vue&type=style&index=0&id=138752de&lang=less&scoped=true&","dependencies":[{"path":"/space/metadata/ui/src/views/SearchPage.vue","mtime":1707869128060},{"path":"/space/metadata/ui/node_modules/css-loader/index.js","mtime":1707869665843},{"path":"/space/metadata/ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1707869662503},{"path":"/space/metadata/ui/node_modules/postcss-loader/src/index.js","mtime":1707869661242},{"path":"/space/metadata/ui/node_modules/less-loader/dist/cjs.js","mtime":1707869664073},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/vue-loader/lib/index.js","mtime":1707869662322}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.search-row {\n  margin-top: 20px;\n  form {\n    padding-bottom: 0;\n  }\n}\n",{"version":3,"sources":["SearchPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+KA;AACA;AACA;AACA;AACA;AACA","file":"SearchPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <section>\n    <div class=\"search row\">\n      <div class=\"col-xs-12 search-row\">\n        <ml-input :qtext=\"qtext\" :search=\"search\" :suggest=\"suggest\" class=\"search\"></ml-input>\n      </div>\n      <div class=\"col-xs-12 col-sm-4 col-md-2 facets-col\">\n        <ml-facets v-if=\"facets\" :facets=\"facets\" :toggle=\"toggleFacet\" :active-facets=\"activeFacets\" :negate=\"toggleNegatedFacet\"></ml-facets>\n      </div>\n      <div class=\"col-xs-12 col-sm-8 col-md-10 results-col\">\n        <!-- TODO: hide spinner when search is done? -->\n<!--\n        <i class=\"fa fa-refresh pull-right\" :class=\"searchPending ? 'fa-spin' : ''\"\n          v-on:click.prevent=\"$forceUpdate()\"></i>\n-->\n        <i class=\"fa fa-refresh pull-right\" :class=\"searchPending ? 'fa-spin' : ''\"\n          v-on:click=\"$forceUpdate()\"></i>\n        <transition name=\"fade\" mode=\"out-in\">\n          <h4 v-if=\"!results\">Do a search to get results</h4>\n          <h4 v-else-if=\"total === 0\">No results to show</h4>\n          <div v-else class=\"results\">\n            <!-- TODO: pagination should go below results, but search option like snippet and sorting should remain on top.. -->\n            <div class=\"pagination-ctrls\">\n              <b-pagination size=\"sm\" v-model=\"page\" v-on:change=\"pageChanged\" :limit=\"10\" boundary-links=\"true\" :total-rows=\"total\" :per-page=\"pageLength\">\n              </b-pagination>\n              <!--div class=\"col-sm-12 col-lg-5\" id=\"search-operator-dropdowns\">\n                <ml-select label=\"'Snippet Size'\" current-selection=\"mlSearch.getSnippet() || 'compact'\" selection-list=\"snippetList\" on-select=\"setSnippet(selectionName)\"></ml-select>\n                <ml-select label=\"'Sort'\" current-selection=\"mlSearch.getSort() || 'score'\" selection-list=\"sortList\" on-select=\"setSort(selectionName)\"></ml-select>\n              </div-->\n            </div>\n            <ml-metrics :metrics=\"metrics\"></ml-metrics>\n            <ml-results :results=\"results\"></ml-results>\n          </div>\n        </transition>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport mlFacets from '@/components/ml-search/ml-facets.vue';\nimport mlInput from '@/components/ml-search/ml-input.vue';\nimport mlMetrics from '@/components/ml-search/ml-metrics.vue';\nimport mlResults from '@/components/ml-search/ml-results.vue';\nimport mlSelect from '@/components/ml-select.vue';\nimport SearchApi from '@/api/SearchApi.js';\n\nexport default {\n  name: 'SearchPage',\n  props: ['type'],\n  data() {\n    return {\n      searchPending: false\n    };\n  },\n  components: {\n    mlFacets,\n    mlInput,\n    mlMetrics,\n    mlResults,\n    mlSelect\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.state.auth.authenticated;\n    },\n    searchState() {\n      return this.$store.state.search[this.type];\n    },\n    facets() {\n      return this.searchState.facets || {};\n    },\n    pageLength() {\n      return this.searchState.pageLength || 10;\n    },\n    total() {\n      return this.searchState.total || 0;\n    },\n    results() {\n      return this.searchState.results;\n    },\n    qtext() {\n      return this.searchState.qtext || '';\n    },\n    activeFacets() {\n      return this.searchState.activeFacets || {};\n    },\n    seconds() {\n      return this.searchState.seconds || 0;\n    },\n    metrics() {\n      return {\n        total: this.total,\n        page: this.page,\n        pageLength: this.pageLength,\n        seconds: this.seconds\n      };\n    }\n  },\n  created() {\n    if (this.isLoggedIn) {\n      this.page = this.$store.getters['search/' + this.type + '/page'] || 1;\n    }\n  },\n  mounted() {\n    if (this.$route.params && this.$route.params.refresh) {\n      this.search();\n    }\n  },\n  watch: {\n    isLoggedIn: function(isLoggedIn) {\n      if (isLoggedIn) {\n        this.search();\n      }\n    }\n  },\n  methods: {\n    toggleFacet(facet, type, value) {\n      console.log('Toggle ' + facet + ' ' + type + ' ' + value);\n      this.searchPending = true;\n      this.$store\n        .dispatch('search/' + this.type + '/toggleFacet', {\n          facet,\n          type,\n          value\n        })\n        .then(() => {\n          this.searchPending = false;\n        });\n    },\n    toggleNegatedFacet(facet, type, value) {\n      console.log('Negate ' + facet + ' ' + type + ' ' + value);\n      this.searchPending = true;\n      this.$store\n        .dispatch('search/' + this.type + '/toggleFacet', {\n          facet,\n          type,\n          value,\n          negated: true\n        })\n        .then(() => {\n          this.searchPending = false;\n        });\n    },\n    pageChanged(page) {\n      console.log('Paging to ' + page);\n      this.searchPending = true;\n      this.$store\n        .dispatch('search/' + this.type + '/paginate', { page })\n        .then(() => {\n          this.searchPending = false;\n        });\n    },\n    search(qtext) {\n      console.log('Searching for ' + qtext);\n      this.searchPending = true;\n      this.$store\n        .dispatch('search/' + this.type + '/search', {\n          qtext\n        })\n        .then(() => {\n          this.searchPending = false;\n        });\n    },\n    suggest(val) {\n      console.log('Suggest ' + val);\n      return SearchApi.suggest(this.type, val).then(response => {\n        return response.suggestions;\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.search-row {\n  margin-top: 20px;\n  form {\n    padding-bottom: 0;\n  }\n}\n</style>\n"]}]}