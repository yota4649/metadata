{"remainingRequest":"/space/metadata/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/space/metadata/ui/src/views/ProfilePage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/space/metadata/ui/src/views/ProfilePage.vue","mtime":1707869128060},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/babel-loader/lib/index.js","mtime":1707869666788},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/vue-loader/lib/index.js","mtime":1707869662322}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { required, email } from 'vuelidate/lib/validators';\n\nexport default {\n  name: 'ProfilePage',\n  data() {\n    return {\n      tmpProfile: this.initProfile(this.$store.state.auth.profile)\n    };\n  },\n  validations: {\n    tmpProfile: {\n      emails: {\n        $each: {\n          required,\n          email\n        }\n      }\n    }\n  },\n  computed: {\n    previousRoute() {\n      return this.$store.state.route.from;\n    },\n    authenticated() {\n      return this.$store.state.auth.authenticated;\n    },\n    username() {\n      return this.$store.state.auth.username;\n    }\n  },\n  methods: {\n    initProfile(profile) {\n      var tmpProfile = JSON.parse(JSON.stringify(profile || {}));\n      if (!tmpProfile.emails) {\n        tmpProfile.emails = [];\n      }\n      return tmpProfile;\n    },\n    addEmail() {\n      this.tmpProfile.emails.push('');\n    },\n    removeEmail(index) {\n      this.tmpProfile.emails.splice(index, 1);\n    },\n    submit() {\n      var self = this;\n      if (self.$v.$invalid) {\n        return;\n      }\n      const toast = self.$parent.$refs.toast;\n      self.$store.dispatch('auth/update', self.tmpProfile).then(error => {\n        if (error) {\n          toast.showToast('Failed to update the user profile', {\n            theme: 'error'\n          });\n        } else {\n          toast.showToast('Successfully updated the user profile', {\n            theme: 'success'\n          });\n          self.$router.push({\n            name: self.previousRoute.name,\n            params: self.previousRoute.params\n          });\n        }\n      });\n    }\n  }\n};\n",{"version":3,"sources":["ProfilePage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ProfilePage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div v-if=\"authenticated\" class=\"profile\">\n    <div class=\"row\">\n      <div class=\"col-md-2\"></div>\n      <h2 class=\"col-md-10\">Edit profile of {{ username }}</h2>\n    </div>\n    <form class=\"form-horizontal\" name=\"profileForm\">\n      <div class=\"form-group\">\n        <div class=\"row\">\n          <div class=\"col-md-2\">\n            <label class=\"control-label\">Full name</label>\n          </div>\n          <div class=\"col-md-2\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Full name of user\" v-model.trim=\"tmpProfile.fullname\">\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\" v-bind:class=\"{ 'has-error': $v.tmpProfile.$invalid }\">\n        <div class=\"row\">\n          <div class=\"col-md-2\">\n            <label class=\"control-label\">E-mail(s)</label>\n          </div>\n          <div class=\"col-md-1\">\n            <button class=\"btn btn-primary\" v-on:click.prevent=\"addEmail()\">\n              <span class=\"glyphicon glyphicon-plus\"></span>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <!-- always show add button -->\n        <!-- repeat if there are emails -->\n        <div class=\"row\" v-if=\"tmpProfile.emails\" v-for=\"(email, $index) in tmpProfile.emails\" :key=\"$index\">\n          <div class=\"col-md-offset-2 col-md-6\">\n            <div class=\"input-group\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"e-mail of user\" v-model.trim=\"tmpProfile.emails[$index]\" v-on:input=\"$v.tmpProfile.emails.$each[$index].$touch\"/>\n              <span class=\"input-group-addon btn-danger\" v-on:click.prevent=\"removeEmail($index)\">\n                <span class=\"glyphicon glyphicon-remove\"></span>\n              </span>\n            </div>\n            <div class=\"row\" v-if=\"$v.tmpProfile.emails.$each[$index].$error\">\n              <div class=\"col-md-8 error text-danger\">Not valid email!</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-offset-7 col-md-5\">\n          <router-link :to=\"{name: previousRoute.name, params: previousRoute.params}\" class=\"btn btn-default\">Cancel</router-link>\n          <button class=\"btn btn-primary\" v-on:click.prevent=\"submit()\">Submit</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { required, email } from 'vuelidate/lib/validators';\n\nexport default {\n  name: 'ProfilePage',\n  data() {\n    return {\n      tmpProfile: this.initProfile(this.$store.state.auth.profile)\n    };\n  },\n  validations: {\n    tmpProfile: {\n      emails: {\n        $each: {\n          required,\n          email\n        }\n      }\n    }\n  },\n  computed: {\n    previousRoute() {\n      return this.$store.state.route.from;\n    },\n    authenticated() {\n      return this.$store.state.auth.authenticated;\n    },\n    username() {\n      return this.$store.state.auth.username;\n    }\n  },\n  methods: {\n    initProfile(profile) {\n      var tmpProfile = JSON.parse(JSON.stringify(profile || {}));\n      if (!tmpProfile.emails) {\n        tmpProfile.emails = [];\n      }\n      return tmpProfile;\n    },\n    addEmail() {\n      this.tmpProfile.emails.push('');\n    },\n    removeEmail(index) {\n      this.tmpProfile.emails.splice(index, 1);\n    },\n    submit() {\n      var self = this;\n      if (self.$v.$invalid) {\n        return;\n      }\n      const toast = self.$parent.$refs.toast;\n      self.$store.dispatch('auth/update', self.tmpProfile).then(error => {\n        if (error) {\n          toast.showToast('Failed to update the user profile', {\n            theme: 'error'\n          });\n        } else {\n          toast.showToast('Successfully updated the user profile', {\n            theme: 'success'\n          });\n          self.$router.push({\n            name: self.previousRoute.name,\n            params: self.previousRoute.params\n          });\n        }\n      });\n    }\n  }\n};\n</script>\n"]}]}