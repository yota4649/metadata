{"remainingRequest":"/space/metadata/ui/node_modules/babel-loader/lib/index.js!/space/metadata/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/space/metadata/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/space/metadata/ui/src/views/UploadPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/space/metadata/ui/src/views/UploadPage.vue","mtime":1707869128061},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/babel-loader/lib/index.js","mtime":1707869666788},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/vue-loader/lib/index.js","mtime":1707869662322}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  name: 'UploadPage',\n  components: {},\n  props: ['type'],\n  data: function data() {\n    var self = this;\n    return {\n      tagList: \"\"\n    };\n  },\n  computed: {},\n  methods: {\n    sendFile: function sendFile(e) {\n      var progress = e.detail;\n      console.log(['sendFile', progress]);\n      progress.update(0);\n      this.$store.dispatch('crud/' + this.type + '/create', {\n        // Note: spaces in names/id's are not accepted, not even encoded.\n        id: encodeURIComponent('/upload/' + progress.file.name.replace(/\\s/g, '_')),\n        data: progress.file,\n        format: 'binary'\n      }).then(function (response) {\n        progress.id = response.id;\n\n        if (!response.isError) {\n          progress.update(100);\n        } else {\n          progress.error(response.error);\n        }\n      });\n    },\n    sendAllFiles: function sendAllFiles(e) {\n      var all = e.detail;\n      console.log(['sendAllFiles', all]);\n    },\n    openFile: function openFile(e) {\n      var progress = e.detail;\n      console.log(['openFile', progress]);\n      this.$router.push({\n        name: 'root.view',\n        params: {\n          id: progress.id\n        }\n      });\n    },\n    buttonClicked: function buttonClicked() {\n      var _this = this;\n\n      var para = {};\n      para[\"rs.tagList\"] = this.tagList;\n      window.alert(\"Generate Metadata with : \" + this.tagList);\n      axios.put(\"/v1/resources/generateMeta?rs:tagList=\" + encodeURIComponent(this.tagList), para).then(function (response) {\n        console.log(\"Successfully generated\");\n\n        _this.$router.go({\n          path: _this.$router.currentRoute.path,\n          force: true\n        });\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }\n};",{"version":3,"sources":["UploadPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAGA,EAAA,KAAA,EAAA,CAAA,MAAA,CAHA;AAIA,EAAA,IAJA,kBAIA;AACA,QAAA,IAAA,GAAA,IAAA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GATA;AAUA,EAAA,QAAA,EAAA,EAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,CADA,EACA;AACA,UAAA,QAAA,GAAA,CAAA,CAAA,MAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,CAAA,UAAA,EAAA,QAAA,CAAA;AAEA,MAAA,QAAA,CAAA,MAAA,CAAA,CAAA;AACA,WAAA,MAAA,CACA,QADA,CACA,UAAA,KAAA,IAAA,GAAA,SADA,EACA;AACA;AACA,QAAA,EAAA,EAAA,kBAAA,CACA,aAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,KAAA,EAAA,GAAA,CADA,CAFA;AAKA,QAAA,IAAA,EAAA,QAAA,CAAA,IALA;AAMA,QAAA,MAAA,EAAA;AANA,OADA,EASA,IATA,CASA,UAAA,QAAA,EAAA;AACA,QAAA,QAAA,CAAA,EAAA,GAAA,QAAA,CAAA,EAAA;;AACA,YAAA,CAAA,QAAA,CAAA,OAAA,EAAA;AACA,UAAA,QAAA,CAAA,MAAA,CAAA,GAAA;AACA,SAFA,MAEA;AACA,UAAA,QAAA,CAAA,KAAA,CAAA,QAAA,CAAA,KAAA;AACA;AACA,OAhBA;AAiBA,KAvBA;AAwBA,IAAA,YAxBA,wBAwBA,CAxBA,EAwBA;AACA,UAAA,GAAA,GAAA,CAAA,CAAA,MAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,CAAA,cAAA,EAAA,GAAA,CAAA;AACA,KA3BA;AA4BA,IAAA,QA5BA,oBA4BA,CA5BA,EA4BA;AACA,UAAA,QAAA,GAAA,CAAA,CAAA,MAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,CAAA,UAAA,EAAA,QAAA,CAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,MAAA,EAAA;AAAA,UAAA,EAAA,EAAA,QAAA,CAAA;AAAA;AAFA,OAAA;AAIA,KAnCA;AAoCA,IAAA,aApCA,2BAoCA;AAAA;;AACA,UAAA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,CAAA,YAAA,CAAA,GAAA,KAAA,OAAA;AACA,MAAA,MAAA,CAAA,KAAA,CAAA,8BAAA,KAAA,OAAA;AAEA,MAAA,KAAA,CACA,GADA,CACA,2CAAA,kBAAA,CAAA,KAAA,OAAA,CADA,EACA,IADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,wBAAA;;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,EAAA,CAAA;AAAA,UAAA,IAAA,EAAA,KAAA,CAAA,OAAA,CAAA,YAAA,CAAA,IAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AACA,OALA,EAMA,KANA,CAMA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OARA;AASA;AAlDA;AAXA,CAAA","sourcesContent":["<template>\n  <section class=\"upload\">\n    <h1>ファイルアップロード</h1>\n    <file-dropzone\n        button=\"false\"\n        multiple=\"multiple\"\n        v-on:drop=\"sendFile\"\n        v-on:drop-all=\"sendAllFiles\"\n        v-on:file-dblclick=\"openFile\">\n      <div slot=\"intro\">\n        <p><strong>ここにファイルをドロップするかクリックしてファイルを選択してください</strong></p>\n        <em>(ファイルは自動的にアップロードされます)</em>\n      </div>\n    </file-dropzone>\n    タグ名：\n    <input v-model=\"tagList\" placeholder=\"タグリスト(複数指定の場合はカンマで区切る)\">\n    <button class=\"btn btn-primary\" v-on:click=\"buttonClicked()\">メタデータ作成</button>\n  </section>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: 'UploadPage',\n  components: {},\n  props: ['type'],\n  data() {\n    const self=this;\n    return {\n      tagList:\"\",\n    }\n  },\n  computed: {},\n  methods: {\n    sendFile(e) {\n      var progress = e.detail;\n      console.log(['sendFile', progress]);\n\n      progress.update(0);\n      this.$store\n        .dispatch('crud/' + this.type + '/create', {\n          // Note: spaces in names/id's are not accepted, not even encoded.\n          id: encodeURIComponent(\n            '/upload/' + progress.file.name.replace(/\\s/g, '_')\n          ),\n          data: progress.file,\n          format: 'binary'\n        })\n        .then(function(response) {\n          progress.id = response.id;\n          if (!response.isError) {\n            progress.update(100);\n          } else {\n            progress.error(response.error);\n          }\n        });\n    },\n    sendAllFiles(e) {\n      var all = e.detail;\n      console.log(['sendAllFiles', all]);\n    },\n    openFile(e) {\n      var progress = e.detail;\n      console.log(['openFile', progress]);\n      this.$router.push({\n        name: 'root.view',\n        params: { id: progress.id }\n      });\n    },\n    buttonClicked(){\n        var para = {};\n        para[\"rs.tagList\"] = this.tagList;\n        window.alert(\"Generate Metadata with : \"+this.tagList);\n\n        axios\n          .put(\"/v1/resources/generateMeta?rs:tagList=\"+encodeURIComponent(this.tagList), para)\n          .then((response) => {\n             console.log(\"Successfully generated\")\n             this.$router.go({path: this.$router.currentRoute.path, force: true});\n          })\n          .catch((e) => {\n              console.log(e);\n          });\n    },\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n</style>\n"],"sourceRoot":"src/views"}]}