{"remainingRequest":"/space/metadata/ui/node_modules/babel-loader/lib/index.js!/space/metadata/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/space/metadata/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/space/metadata/ui/src/components/ml-similar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/space/metadata/ui/src/components/ml-similar.vue","mtime":1707869128060},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/babel-loader/lib/index.js","mtime":1707869666788},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/vue-loader/lib/index.js","mtime":1707869662322}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'ml-similar',\n  props: {\n    title: {\n      type: String,\n      default: function _default() {\n        return '';\n      }\n    },\n    uri: {\n      type: String,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      loading: false,\n      similar: []\n    };\n  },\n  methods: {\n    updateSimilar: function updateSimilar() {\n      var _this = this;\n\n      if (this.uri) {\n        this.loading = true; // TODO: fetching similar docs needs a better middleware/backend solution\n\n        this.$http({\n          method: 'GET',\n          url: '/v1/resources/extsimilar',\n          params: {\n            'rs:uri': this.uri\n          },\n          auth: {\n            username: this.$store.state.auth.username,\n            password: this.$store.state.auth.password,\n            sendImmediately: true\n          }\n        }).then(function (response) {\n          _this.similar = response.data.similar;\n          _this.loading = false;\n        }, function (error) {\n          console.log(error);\n          _this.loading = false;\n        });\n      }\n    },\n    resultLabel: function resultLabel(result) {\n      if (result.label || result.uri) {\n        return result.label || result.uri.split('/').pop();\n      } else {\n        return result.split('/').pop();\n      }\n    }\n  },\n  watch: {\n    uri: function uri(newUri) {\n      if (newUri) {\n        this.updateSimilar();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.updateSimilar();\n  }\n};",{"version":3,"sources":["ml-similar.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA,EAAA;AACA;AAJA,KADA;AAOA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AAPA,GAFA;AAcA,EAAA,IAdA,kBAcA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAnBA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,UAAA,KAAA,GAAA,EAAA;AACA,aAAA,OAAA,GAAA,IAAA,CADA,CAEA;;AACA,aAAA,KAAA,CAAA;AACA,UAAA,MAAA,EAAA,KADA;AAEA,UAAA,GAAA,EAAA,0BAFA;AAGA,UAAA,MAAA,EAAA;AACA,sBAAA,KAAA;AADA,WAHA;AAMA,UAAA,IAAA,EAAA;AACA,YAAA,QAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QADA;AAEA,YAAA,QAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QAFA;AAGA,YAAA,eAAA,EAAA;AAHA;AANA,SAAA,EAWA,IAXA,CAYA,UAAA,QAAA,EAAA;AACA,UAAA,KAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA,UAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,SAfA,EAgBA,UAAA,KAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,UAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,SAnBA;AAqBA;AACA,KA3BA;AA4BA,IAAA,WA5BA,uBA4BA,MA5BA,EA4BA;AACA,UAAA,MAAA,CAAA,KAAA,IAAA,MAAA,CAAA,GAAA,EAAA;AACA,eAAA,MAAA,CAAA,KAAA,IAAA,MAAA,CAAA,GAAA,CAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAA;AACA,OAFA,MAEA;AACA,eAAA,MAAA,CAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAA;AACA;AACA;AAlCA,GApBA;AAwDA,EAAA,KAAA,EAAA;AACA,IAAA,GADA,eACA,MADA,EACA;AACA,UAAA,MAAA,EAAA;AACA,aAAA,aAAA;AACA;AACA;AALA,GAxDA;AA+DA,EAAA,OA/DA,qBA+DA;AACA,SAAA,aAAA;AACA;AAjEA,CAAA","sourcesContent":["<template>\n  <div class=\"similar-items\">\n    <i class=\"fa fa-refresh fa-spin pull-right\" v-if=\"loading\"></i>\n    <h3 v-if=\"title\">{{ title }}</h3>\n    <ul>\n      <li v-for=\"(result, $index) in similar\" :key=\"$index\">\n        <router-link :to=\"{ name: 'root.view', params: {id: result.id || encodeURIComponent(result) } }\">{{ resultLabel(result) }}</router-link>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ml-similar',\n  props: {\n    title: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    uri: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      similar: []\n    };\n  },\n  methods: {\n    updateSimilar() {\n      if (this.uri) {\n        this.loading = true;\n        // TODO: fetching similar docs needs a better middleware/backend solution\n        this.$http({\n          method: 'GET',\n          url: '/v1/resources/extsimilar',\n          params: {\n            'rs:uri': this.uri\n          },\n          auth: {\n            username: this.$store.state.auth.username,\n            password: this.$store.state.auth.password,\n            sendImmediately: true\n          }\n        }).then(\n          response => {\n            this.similar = response.data.similar;\n            this.loading = false;\n          },\n          error => {\n            console.log(error);\n            this.loading = false;\n          }\n        );\n      }\n    },\n    resultLabel(result) {\n      if (result.label || result.uri) {\n        return result.label || result.uri.split('/').pop();\n      } else {\n        return result.split('/').pop();\n      }\n    }\n  },\n  watch: {\n    uri(newUri) {\n      if (newUri) {\n        this.updateSimilar();\n      }\n    }\n  },\n  mounted() {\n    this.updateSimilar();\n  }\n};\n</script>\n"],"sourceRoot":"src/components"}]}