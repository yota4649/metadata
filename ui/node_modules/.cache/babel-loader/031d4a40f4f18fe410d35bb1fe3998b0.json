{"remainingRequest":"/space/metadata/ui/node_modules/babel-loader/lib/index.js!/space/metadata/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/space/metadata/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/space/metadata/ui/src/components/BreadCrumbs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/space/metadata/ui/src/components/BreadCrumbs.vue","mtime":1707869128059},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/babel-loader/lib/index.js","mtime":1707869666788},{"path":"/space/metadata/ui/node_modules/cache-loader/dist/cjs.js","mtime":1707869666420},{"path":"/space/metadata/ui/node_modules/vue-loader/lib/index.js","mtime":1707869662322}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nvar _data = {\n  history: []\n};\nexport default {\n  name: 'BreadCrumbs',\n  data: function data() {\n    return _data;\n  },\n  computed: {\n    crumbs: function crumbs() {\n      if (_data.history.length === 0) {\n        _data.history.push(_.clone(this.$route, true));\n      }\n\n      return _data.history.slice(-10);\n    }\n  },\n  watch: {\n    $route: function $route(newRoute) {\n      _data.history.push(_.clone(newRoute, true));\n\n      if (_data.history.length > 11) {\n        _data.history.unshift();\n      }\n    }\n  },\n  methods: {\n    isLast: function isLast($index) {\n      return this.crumbs.length === $index + 1;\n    }\n  }\n};",{"version":3,"sources":["BreadCrumbs.vue"],"names":[],"mappings":";;;;;;;;;;;;AAaA,OAAA,CAAA,MAAA,QAAA;AAEA,IAAA,KAAA,GAAA;AACA,EAAA,OAAA,EAAA;AADA,CAAA;AAIA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA,KAAA;AACA,GAJA;AAKA,EAAA,QAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA,CAAA,KAAA,MAAA,EAAA,IAAA,CAAA;AACA;;AACA,aAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA;AACA;AANA,GALA;AAaA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA,gBAAA,QAAA,EAAA;AACA,MAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,CAAA;;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,MAAA,GAAA,EAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,OAAA;AACA;AACA;AANA,GAbA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,MADA,EACA;AACA,aAAA,KAAA,MAAA,CAAA,MAAA,KAAA,MAAA,GAAA,CAAA;AACA;AAHA;AArBA,CAAA","sourcesContent":["<template>\n  <nav aria-label=\"breadcrumbs\">\n    <ol class=\"breadcrumb\">\n      <li class=\"breadcrumb-item\" v-if=\"history.length > crumbs.length\">..</li>\n      <li class=\"breadcrumb-item\" v-for=\"(crumb, $index) in crumbs\" :key=\"$index\" :class=\"isLast($index) ? 'active' : ''\" v-bind=\"isLast($index) ? { 'aria-current': 'page' } : {}\">\n        <router-link v-if=\"!isLast($index)\" :to=\"crumb\">{{ crumb.meta.label }}</router-link>\n        <span v-if=\"isLast($index)\">{{ crumb.meta.label }}</span>\n      </li>\n    </ol>\n  </nav>\n</template>\n\n<script>\nimport _ from 'lodash';\n\nconst data = {\n  history: []\n};\n\nexport default {\n  name: 'BreadCrumbs',\n  data() {\n    return data;\n  },\n  computed: {\n    crumbs() {\n      if (data.history.length === 0) {\n        data.history.push(_.clone(this.$route, true));\n      }\n      return data.history.slice(-10);\n    }\n  },\n  watch: {\n    $route: function(newRoute) {\n      data.history.push(_.clone(newRoute, true));\n      if (data.history.length > 11) {\n        data.history.unshift();\n      }\n    }\n  },\n  methods: {\n    isLast($index) {\n      return this.crumbs.length === $index + 1;\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n"],"sourceRoot":"src/components"}]}